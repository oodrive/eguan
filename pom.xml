<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.eguan</groupId>
    <artifactId>eguan</artifactId>
    <packaging>pom</packaging>
    <version>0.6-SNAPSHOT</version>

    <name>Project eguan</name>
    <description>
    Eguan is a replicated storage system in Java and C/C++.
    </description>

    <prerequisites>
        <maven>3.0.4</maven>
    </prerequisites>

    <organization>
        <name>Oodrive</name>
        <url>http://www.oodrive.com/</url>
    </organization>
    <inceptionYear>2012</inceptionYear>
    <licenses>
        <license>
            <name>Apache 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:https://github.com/oodrive/eguan.git</connection>
    </scm>

    <properties>
        <projectName>eguan</projectName>

        <!-- Charset -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- NAR AOL supported by this project -->
        <localAOL>amd64-Linux-gpp</localAOL>

        <!-- Default temporary file directory -->
        <tmpdir>/tmp</tmpdir>

        <!-- Memory for unit tests -->
        <unitests.mem>-Xmx1536m</unitests.mem>

        <!-- Version of dependencies -->
        <apacheCxfVersion>2.7.0</apacheCxfVersion>
        <aspectjrtVersion>1.8.0</aspectjrtVersion>
        <bcprovVersion>1.51</bcprovVersion>
        <GgleTestVersion>1.6.0</GgleTestVersion>
        <guavaVersion>18.0</guavaVersion>
        <hazelcastVersion>2.5</hazelcastVersion>
        <hppcVersion>0.6.0</hppcVersion>
        <jettyVersion>9.2.6.v20141205</jettyVersion>
        <jerseyVersion>1.18.3</jerseyVersion>
        <jsr305Version>3.0.0</jsr305Version>
        <junitVersion>4.12</junitVersion>
        <jscsiVersion>2.5.1-oodrive</jscsiVersion>
        <leveldbVersion>1.18.0-oodrive</leveldbVersion>
        <log4cplusVersion>1.1.2-rc2-oodrive</log4cplusVersion>
        <logbackVersion>1.1.2</logbackVersion>
        <mockitoVersion>1.10.17</mockitoVersion>
        <nettyVersion>4.0.24.Final</nettyVersion>
        <perfidixVersion>3.6.9</perfidixVersion>
        <protobufRpcProVersion>3.0.0</protobufRpcProVersion>
        <protobufVersion>2.4.1</protobufVersion>
        <snappyVersion>1.1.0</snappyVersion>
        <testngVersion>6.8</testngVersion>
    </properties>

    <modules>
        <module>thirdparty</module>
        <module>main</module>
    </modules>

    <build>
        <pluginManagement>
            <plugins>

                <!-- Set default version of Java -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.2</version>
                    <configuration>
                        <source>1.7</source>
                        <target>1.7</target>
                    </configuration>
                </plugin>

                <!-- Unit test plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.18</version>
                    <configuration>
                        <!-- Raise max memory for unit tests -->
                        <argLine>${unitests.mem}</argLine>
                        <!-- Ignore 'long' JAR tests by default -->
                        <excludes>
                            <exclude>**/*L.java</exclude>
                        </excludes>
                        <!-- Set temporary file directory -->
                        <systemPropertyVariables>
                            <java.io.tmpdir>${tmpdir}</java.io.tmpdir>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>

                <!-- Integration test plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.18</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <configuration>
                                <!-- Raise max memory for integration tests -->
                                <argLine>${unitests.mem}</argLine>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Unit test coverage plugin. Enabled with profile 'coverage' -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.7.5.201505241946</version>
                    <executions>
                        <!-- Prepare agent before running tests with surefire -->
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                                <propertyName>surefireArgLine</propertyName>
                                <!-- Exclude generated code from coverage -->
                                <excludes>
                                    <exclude>io.eguan.proto.*</exclude>
                                    <exclude>io.eguan.vold.rest.generated.*</exclude>
                                    <exclude>*NarSystem*</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                        <!-- Create report if the tests are successful -->
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <!-- Data file: same as prepare-agent -->
                                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                                <!-- Exclude generated code from coverage -->
                                <excludes>
                                    <exclude>io.eguan.proto.*</exclude>
                                    <exclude>io.eguan.vold.rest.generated.*</exclude>
                                    <exclude>*NarSystem*</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Needs the oodrive version of the NAR plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-nar-plugin</artifactId>
                    <version>2.1-oodrive</version>
                    <extensions>true</extensions>
                    <configuration>
                        <!-- Raise max memory for unit tests -->
                        <argLine>${unitests.mem}</argLine>
                        <!-- Ignore 'long' NAR tests by default -->
                        <excludes>
                            <exclude>**/*L.java</exclude>
                            <exclude>**/*$*</exclude>
                        </excludes>
                        <!-- Set temporary file directory -->
                        <systemProperties>
                            <property>
                                <name>java.io.tmpdir</name>
                                <value>${tmpdir}</value>
                            </property>
                        </systemProperties>
                    </configuration>
                </plugin>

                <!-- Create protobuf classes -->
                <plugin>
                    <groupId>com.google.protobuf.tools</groupId>
                    <artifactId>maven-protoc-plugin</artifactId>
                    <version>0.1.11-oodrive</version>
                </plugin>

                <!-- Create jar with dependencies -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.3</version>
                </plugin>

                <!-- Assembly plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.5.4</version>
                </plugin>

                <!-- Clean plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.6.1</version>
                </plugin>

                <!-- Jar plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.5</version>
                </plugin>

                <!-- War plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.5</version>
                </plugin>

                <!-- Source plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.4</version>
                </plugin>

                <!-- Apache CXF wadl2java plugin -->
                <plugin>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-wadl2java-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>

                <!-- Codehaus build number plugin -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>1.3</version>
                </plugin>

                <!-- Codehaus exec plugin -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.3.2</version>
                </plugin>

                <!-- Helper plugin. Add generated code into classpath -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.9.1</version>
                </plugin>

                <!-- Add license to sources -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>1.8</version>
                    <configuration>
                        <projectName>Project eguan</projectName>
                        <licenseName>apache_v2</licenseName>
                        <canUpdateCopyright>true</canUpdateCopyright>
                        <canUpdateDescription>true</canUpdateDescription>
                        <canUpdateLicense>true</canUpdateLicense>
                        <roots>
                            <root>src</root>
                            <root>target/generated-sources</root>
                            <root>target/nar/nar-generated</root>
                        </roots>
                        <excludes>
                            <exclude>**/*.xml</exclude>
                            <exclude>**/*.sh</exclude>
                            <exclude>**/*.css</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>first</id>
                            <goals>
                                <goal>update-file-header</goal>
                            </goals>
                            <phase>process-sources</phase>
                        </execution>
                    </executions>
                </plugin>

                <!-- Workaround the lack of m2eclipse plugin for NAR projects. See http://stackoverflow.com/questions/6352208/how-to-solve-plugin-execution-not-covered-by-lifecycle-configuration-for-sprin 
                    for details -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-nar-plugin</artifactId>
                                        <versionRange>[2.1-oodrive,)</versionRange>
                                        <goals>
                                            <goal>nar-assembly</goal>
                                            <goal>nar-compile</goal>
                                            <goal>nar-download</goal>
                                            <goal>nar-gnu-configure</goal>
                                            <goal>nar-gnu-make</goal>
                                            <goal>nar-gnu-process</goal>
                                            <goal>nar-gnu-resources</goal>
                                            <goal>nar-javah</goal>
                                            <goal>nar-resources</goal>
                                            <goal>nar-system-generate</goal>
                                            <goal>nar-testCompile</goal>
                                            <goal>nar-testDownload</goal>
                                            <goal>nar-testUnpack</goal>
                                            <goal>nar-unpack</goal>
                                            <goal>nar-validate</goal>
                                            <goal>nar-vcproj</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.google.protobuf.tools</groupId>
                                        <artifactId>maven-protoc-plugin</artifactId>
                                        <versionRange>[0.1.11-oodrive,)</versionRange>
                                        <goals>
                                            <goal>compile</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.cxf</groupId>
                                        <artifactId>cxf-wadl2java-plugin</artifactId>
                                        <versionRange>[3.0.1,)</versionRange>
                                        <goals>
                                            <goal>wadl2java</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute>
                                            <runOnIncremental>true</runOnIncremental>
                                        </execute>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange>[1.7,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>exec-maven-plugin</artifactId>
                                        <versionRange>[1.3.2,)</versionRange>
                                        <goals>
                                            <goal>exec</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
